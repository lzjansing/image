<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.us.image.dao.ShareDao">

    <sql id="shareColumns">
        a.id AS "id",
        a.content AS "content",
        a.image AS "image",
        a.privated AS "privated",
        a.permission AS "permission",
        a.praise AS "praise",
        a.collect AS "collect",
        a.comment AS "comment",
        a.valid AS "valid",
        a.create_date AS "createDate",
        a.update_date AS "updateDate",

        u.id AS "user.id",
        u.nickname AS "user.nickname"
    </sql>

    <sql id="shareJoins">
        LEFT JOIN t_user u ON u.id=a.uid
    </sql>

    <select id="get" resultType="Share">
        SELECT
        <include refid="shareColumns"/>
        FROM share a
        <include refid="shareJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="Share">
        SELECT
        <include refid="shareColumns"/>
        <if test="currentUser!=null and currentUser.id!=null and currentUser.id!=''">
        , IF(c.id IS NULL, 0, 1) hadCollected
        , IF(p.id IS NULL, 0, 1) hadPraised
        </if>
        FROM share a
        <include refid="shareJoins"/>
        <if test="currentUser!=null and currentUser.id!=null and currentUser.id!=''">
        LEFT JOIN collect c ON c.sid=a.id AND c.from_uid=#{currentUser.id}
        LEFT JOIN praise p ON p.sid=a.id AND p.from_uid=#{currentUser.id}
        </if>
        <where>
            a.valid = #{VALID_ENABLE}
            <if test="id!=null and id!=''">
                AND a.id = #{id}
            </if>
            <if test="content!=null and content!=''">
                AND a.content LIKE concat('%',#{content},'%')
            </if>
            <choose>
                <when test="user!=null and user.id!=null and user.id!=''">
                    AND u.id = #{user.id}
                    <if test="currentUser!=null and currentUser.id!=null and currentUser.id!='' and user.id!=currentUser.id">
                        AND a.privated = #{NO}
                    </if>
                </when>
                <otherwise>
                    AND a.privated = #{NO}
                </otherwise>
            </choose>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date desc
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
        INSERT INTO share(
        id,
        uid,
        content,
        image,
        privated,
        permission,
        praise,
        collect,
        comment,
        valid,
        create_date,
        update_date
        ) VALUES (
        #{id},
        #{user.id},
        #{content},
        #{image},
        #{privated},
        #{permission},
        #{praise},
        #{collect},
        #{comment},
        #{valid},
        #{createDate},
        #{updateDate}
        )
    </insert>

    <update id="updateSelf">
        UPDATE share SET
        <if test="privated!=null">
            privated = #{privated},
        </if>
        update_date = #{updateDate}
        WHERE id = #{id}
        AND uid = #{currentUser.id}
    </update>

    <update id="increase">
        UPDATE share SET
        <if test="praise!=null">
            praise = praise+1,
        </if>
        <if test="collect!=null">
            collect = collect+1,
        </if>
        <if test="comment!=null">
            comment = comment+1,
        </if>
        update_date = #{updateDate}
        WHERE id = #{id}
        AND uid = #{currentUser.id}
    </update>

    <update id="decrease">
        UPDATE share SET
        <if test="praise!=null">
            praise = praise-1,
        </if>
        <if test="collect!=null">
            collect = collect-1,
        </if>
        <if test="comment!=null">
            comment = comment-1,
        </if>
        update_date = #{updateDate}
        WHERE id = #{id}
        AND uid = #{currentUser.id}
    </update>

    <update id="deleteSelf">
        UPDATE share SET
        valid = #{VALID_DELETE}
        WHERE id = #{id}
          AND uid = #{currentUser.id}
    </update>
</mapper>